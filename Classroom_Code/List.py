l = ['12', 34, 'Hi', '12']
print(f'Список {l}')
l2 = list([1, 5, 9])
print(f'Список {l2}')
x = 15
a = range(0, 14, 2)

# Основные методы при работе со списком
list(a)  # Преобразует объект a в список.
print("Преобразует объект a в список", list(a))
l.append(x)  # Добавляет новый элемент x в конец списка l.
print('Добавляет новый элемент x в конец списка l.', l)
l.extend(l2)  # Добавляет новый список l2 в конец списка l.
print('Добавляет новый список l2 в конец списка l.', l)
l.insert(1, 66)  # Вставляет x в элемент с индексом i.
print('Вставляет x в элемент с индексом i.', l)
l2 = l.copy()  # Создаёт поверхностную копию списка l
print('Создаёт поверхностную копию списка l', l2)

# Поиск значений в списке
l.count(x)  # Определяет количество вхождений x в список l.
print('Определяет количество вхождений x в список l.', l.count(4))

l.index(x, 0, -1)  # Возвращает наименьшее значение индекса i, где s[i] == x.
# Необязательные значения start и stop определяют индексы начального и конечного
# элементов диапазона, где выполняется поиск.
print('Возвращает наименьшее значение индекса i, где s[i] == x.', l.index(x, 0, -1))

# Удаление элементов списка
l.pop(-2)  # Возвращает i-й элемент и удаляет его из списка. Если индекс i не указан,возвращается последний элемент.
print('Возвращает i-й элемент и удаляет его из списка', l)
l.remove('Hi')  # Отыскивает в списке l элемент со значением x и удаляет его.
print('Отыскивает в списке l элемент со значением x и удаляет его.', l)
l2.clear()  # Очищает список
print('Очищает список', l2)
del l[1:3]  # удаление элемента по индексу или нескольких элементов по срезу
# del не удаляет объекты в буквальном смысле,
# она лишь открепляет ссылки, разрывая связь между именем
# и объектом. Удаление объекта произойдет как следствие работы
# сборщика мусора в отношении объектов, на которые больше
# не ссылается ни один другой объект.
# Изменение порядка элементов в списке
print('Удаление элемента по индексу или нескольких элементов по срезу', l)

l.reverse()  # Изменяет порядок следования элементов в списке l на обратный.
print('Изменяет порядок следования элементов в списке l на обратный', l)

l = [9, 56, 32, 1, 4]
l.sort()  # Сортирует элементы списка l. key – это функция, которая вычисляет значение
# ключа. reverse – признак сортировки в обратном порядке. Аргументы key и reverse
# всегда должны передаваться как именованные аргументы.
print('Сортирует элементы списка', l)